name: Publish and upload

on:
  workflow_call:
    inputs:
      upload:
        required: true
        type: boolean
      branch-name:
        required : true
        type: string
      commit-sha:
        required: true
        type: string
      commit-date:
        required: true
        type: string
permissions:
  pull-requests: write  
jobs:
  with-dotnet:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Remove local only content
        shell: pwsh
        working-directory: ./CourageScores/ClientApp
        run: ../../Scripts/Remove-LocalOnlyContent.ps1 -FilePath index.html

      - name: dotnet publish
        run: dotnet publish --configuration Release --property PublishDir=myapp
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          DOTNET_NOLOGO: true
          VITE_APP_BRANCH: "${{ inputs.branch-name }}"
          VITE_APP_SHA: "${{ inputs.commit-sha }}"
          VITE_APP_DATE: "${{ inputs.commit-date }}"
          VITE_APP_PR_NAME: "${{ github.event.pull_request.title }}"
          VITE_APP_PR_NUMBER: "${{ github.event.pull_request.number }}"

      - name: Check .tsx file sizes
        if: ${{ github.event.inputs.ignore_sizes != 'true' }}
        shell: pwsh
        run: ./Scripts/BuildChecks.ps1 -ErrorThreshold 1000 -Extension '.tsx'
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Check .ts file sizes
        if: ${{ github.event.inputs.ignore_sizes != 'true' }}
        shell: pwsh
        run: ./Scripts/BuildChecks.ps1 -ErrorThreshold 500 -Extension '.ts'
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run npm audit
        shell: pwsh
        run: ../../Scripts/NpmAudit.ps1
        working-directory: ./CourageScores/ClientApp
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup whitelabel variants
        shell: pwsh
        run: ../../Scripts/WhiteLabel-Publish.ps1 -PublishDir ../myapp/wwwroot
        working-directory: ./CourageScores/ClientApp

      - name: Publish react coverage
        uses: coverallsapp/github-action@v2.3.6
        with:
          file: ./CourageScores/ClientApp/coverage/lcov.info
          base-path: ./CourageScores/ClientApp
          flag-name: React
          parallel: true
          format: lcov

      - name: Upload artifact for deployment job
        if: ${{ inputs.upload == true }}
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ./CourageScores/myapp
          if-no-files-found: error

      - name: Publish jest test results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: JestTestResults
          path: './CourageScores/ClientApp/junit.xml'
          if-no-files-found: ignore

      - name: Add comments with test failures
        if: success() || failure()
        shell: pwsh
        run: ./Scripts/ProcessTestFailures.ps1
        env:
          GITHUB_TOKEN: ${{ github.token }}
